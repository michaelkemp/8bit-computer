A9,A8,A7,A6,A5,A4,A3,A2,A1,A0,,BS = Byte Select,,,OC,OC,OC,OC,,ST,ST,ST,,ZF,CF,,HT,MI,RI,RO,IO,II,AI,AO,,EO,SU,BI,OI,CE,CO,J,FI,,,OC,OC,OC,OC,,ST,ST,ST,,ZF,CF,,HT,MI,RI,RO,IO,II,AI,AO,,EO,SU,BI,OI,CE,CO,J,FI
BS,ZF,CF,OC,OC,OC,OC,ST,ST,ST,,ZF = Zero Flag,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
0,0,0,0,0,0,0,0,0,0,,CF = Carry Flag,,Fetch,-,-,-,-,,0,0,0,,-,-,,0,1,0,0,0,0,0,0,,0,0,0,0,0,1,0,0,,Fetch,-,-,-,-,,0,0,0,,-,-,,0,1,0,0,0,0,0,0,,0,0,0,0,0,1,0,0
0,0,0,0,0,0,1,0,0,1,,OC = Op Code,,,-,-,-,-,,0,0,1,,-,-,,0,0,0,1,0,1,0,0,,0,0,0,0,1,0,0,0,,,-,-,-,-,,0,0,1,,-,-,,0,0,0,1,0,1,0,0,,0,0,0,0,1,0,0,0
0,0,0,0,0,1,0,0,1,0,,ST = Step,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
0,0,0,…,…,…,…,…,…,…,,,,,OC,OC,OC,OC,,ST,ST,ST,,ZF,CF,,HT,MI,RI,RO,IO,II,AI,AO,,EO,SU,BI,OI,CE,CO,J,FI,,,OC,OC,OC,OC,,ST,ST,ST,,ZF,CF,,HT,MI,RI,RO,IO,II,AI,AO,,EO,SU,BI,OI,CE,CO,J,FI
0,0,0,1,1,1,1,1,1,1,,HT = Halt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,MI = Memory Address In,,NOP,0,0,0,0,,0,1,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,OUT,1,0,0,0,,0,1,0,,-,-,,0,0,0,0,0,0,0,1,,0,0,0,1,0,0,0,0
,,,,,,,,,,,RI = RAM In,,,0,0,0,0,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,,1,0,0,0,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
BS,ZF,CF,OC,OC,OC,OC,ST,ST,ST,,RO = RAM Out,,,0,0,0,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,,1,0,0,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,,IO = Instruction Register Out,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,0,0,0,0,0,1,0,0,1,,II = Instruction Register In,,LDA,0,0,0,1,,0,1,0,,-,-,,0,1,0,0,1,0,0,0,,0,0,0,0,0,0,0,0,,JNC,1,0,0,1,,0,1,0,,-,0,,0,0,0,0,1,0,0,0,,0,0,0,0,0,0,1,0
1,0,0,0,0,1,0,0,1,0,,AI = A Register In,,,0,0,0,1,,0,1,1,,-,-,,0,0,0,1,0,0,1,0,,0,0,0,0,0,0,0,0,,,1,0,0,1,,0,1,0,,-,1,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
1,0,0,…,…,…,…,…,…,…,,AO = A Register Out,,,0,0,0,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,,1,0,0,1,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
1,0,0,1,1,1,1,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,0,0,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,EO = Sum Register Out,,LDI,0,0,1,0,,0,1,0,,-,-,,0,0,0,0,1,0,1,0,,0,0,0,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,SU = Subtract,,,0,0,1,0,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,JNZ,1,0,1,0,,0,1,0,,0,-,,0,0,0,0,1,0,0,0,,0,0,0,0,0,0,1,0
,,,,,,,,,,,BI = B Register In,,,0,0,1,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,,1,0,1,0,,0,1,0,,1,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,OI = Output Register In,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,0,1,0,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,CE = Program Counter Enable,,ADD,0,0,1,1,,0,1,0,,-,-,,0,1,0,0,1,0,0,0,,0,0,0,0,0,0,0,0,,,1,0,1,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,CO = Program Counter Out,,,0,0,1,1,,0,1,1,,-,-,,0,0,0,1,0,0,0,0,,0,0,1,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,J = Jump (Program Counter In),,,0,0,1,1,,1,0,0,,-,-,,0,0,0,0,0,0,1,0,,1,0,0,0,0,0,0,1,,DSP,1,0,1,1,,0,1,0,,-,-,,0,1,0,0,1,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,FI = Flag Register In,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,0,1,1,,0,1,1,,-,-,,0,0,0,1,0,0,0,0,,0,0,0,1,0,0,0,0
,,,,,,,,,,,,,SUB,0,1,0,0,,0,1,0,,-,-,,0,1,0,0,1,0,0,0,,0,0,0,0,0,0,0,0,,,1,0,1,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,,,,0,1,0,0,,0,1,1,,-,-,,0,0,0,1,0,0,0,0,,0,0,1,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,NOP = No Operation,,,0,1,0,0,,1,0,0,,-,-,,0,0,0,0,0,0,1,0,,1,1,0,0,0,0,0,1,,JMP,1,1,0,0,,0,1,0,,-,-,,0,0,0,0,1,0,0,0,,0,0,0,0,0,0,1,0
,,,,,,,,,,,LDA = Load A Reg from RAM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,0,0,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,LDI = Load A Reg with Value,,STA,0,1,0,1,,0,1,0,,-,-,,0,1,0,0,1,0,0,0,,0,0,0,0,0,0,0,0,,,1,1,0,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,ADD = Add RAM to A Reg,,,0,1,0,1,,0,1,1,,-,-,,0,0,1,0,0,0,0,1,,0,0,0,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,SUB = Subtract RAM from A Reg,,,0,1,0,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,JC,1,1,0,1,,0,1,0,,-,0,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,STA = Store A Reg in RAM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,0,1,,0,1,0,,-,1,,0,0,0,0,1,0,0,0,,0,0,0,0,0,0,1,0
,,,,,,,,,,,INC = Add Value to A Reg,,INC,0,1,1,0,,0,1,0,,-,-,,0,0,0,0,1,0,0,0,,0,0,1,0,0,0,0,0,,,1,1,0,1,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,DEC = Subtract Value from A Reg,,,0,1,1,0,,0,1,1,,-,-,,0,0,0,0,0,0,1,0,,1,0,0,0,0,0,0,1,,,1,1,0,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,OUT = Display A Reg Value,,,0,1,1,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,JNC = Jump to Address on Not CF,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,JZ,1,1,1,0,,0,1,0,,0,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,JNZ = Jump to Address on Not ZF,,DEC,0,1,1,1,,0,1,0,,-,-,,0,0,0,0,1,0,0,0,,0,0,1,0,0,0,0,0,,,1,1,1,0,,0,1,0,,1,-,,0,0,0,0,1,0,0,0,,0,0,0,0,0,0,1,0
,,,,,,,,,,,DSP = Display RAM Value,,,0,1,1,1,,0,1,1,,-,-,,0,0,0,0,0,0,1,0,,1,1,0,0,0,0,0,1,,,1,1,1,0,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,JMP = Jump to Address,,,0,1,1,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,,,1,1,1,0,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,JC = Jump to Address on CF Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,JZ = Jump to Address on ZF Set,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HLT,1,1,1,1,,0,1,0,,-,-,,1,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,HLT = Stop Clock,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,,0,1,1,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,1,1,1,,1,0,0,,-,-,,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0
